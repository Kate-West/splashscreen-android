import android.content.Intent
import android.content.pm.PackageManager
import android.net.Uri
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import androidx.fragment.app.Fragment
import com.example.splashscreen.R

class AboutFragment : Fragment() {

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        return inflater.inflate(R.layout.fragment_about, container, false)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        setVersionText()

        // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
        val backButton = view.findViewById<View>(R.id.backButton)

        // –ù–∞—Ö–æ–¥–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        val contactButton = view.findViewById<Button>(R.id.contactButton)
        val shareButton = view.findViewById<Button>(R.id.shareButton)
        val rateButton = view.findViewById<Button>(R.id.rateButton)

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
        backButton.setOnClickListener {
            // –õ–µ–≥–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è
            backButton.animate()
                .scaleX(0.95f)
                .scaleY(0.95f)
                .setDuration(100)
                .withEndAction {
                    backButton.animate()
                        .scaleX(1f)
                        .scaleY(1f)
                        .setDuration(100)
                        .start()

                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥
                    parentFragmentManager.popBackStack()
                }
                .start()
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É" - –¢–ï–ü–ï–†–¨ –° –§–û–†–ú–û–ô
        contactButton.setOnClickListener {
            showFeedbackForm()
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
        shareButton.setOnClickListener {
            val shareIntent = Intent(Intent.ACTION_SEND).apply {
                type = "text/plain"
                putExtra(Intent.EXTRA_TEXT, "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ –∫—Ä—É—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ${getAppName()}!")
                putExtra(Intent.EXTRA_SUBJECT, "–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ${getAppName()}")
            }
            startActivity(Intent.createChooser(shareIntent, "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑"))
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ü–µ–Ω–∏—Ç—å"
        rateButton.setOnClickListener {
            showRatingDialog()
        }
    }

    private fun showFeedbackForm() {
        val dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_feedback_form, null)

        val dialog = AlertDialog.Builder(requireContext())
            .setView(dialogView)
            .setCancelable(true)
            .create()

        // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
        val subjectEditText = dialogView.findViewById<EditText>(R.id.subjectEditText)
        val messageEditText = dialogView.findViewById<EditText>(R.id.messageEditText)
        val cancelButton = dialogView.findViewById<Button>(R.id.cancelButton)
        val sendButton = dialogView.findViewById<Button>(R.id.sendButton)

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
        cancelButton.setOnClickListener {
            dialog.dismiss()
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
        sendButton.setOnClickListener {
            val subject = subjectEditText.text.toString().trim()
            val message = messageEditText.text.toString().trim()

            if (subject.isEmpty() || message.isEmpty()) {
                Toast.makeText(requireContext(), "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º email
            dialog.dismiss()
            sendEmailToDeveloper(subject, message)
        }

        dialog.show()
    }

    private fun sendEmailToDeveloper(subject: String, message: String) {
        val emailIntent = Intent(Intent.ACTION_SENDTO).apply {
            data = Uri.parse("mailto:katty.west.l@gmail.com")
            putExtra(Intent.EXTRA_SUBJECT, "[${getAppName()}] $subject")
            putExtra(Intent.EXTRA_TEXT,
                """
                –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ${getAppName()}:
                
                $message
                
                ---
                –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${getAppVersion()}
                """.trimIndent()
            )
        }

        try {
            startActivity(Intent.createChooser(emailIntent, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑"))
            Toast.makeText(requireContext(), "–û—Ç–∫—Ä—ã–≤–∞—é –ø–æ—á—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...", Toast.LENGTH_SHORT).show()
        } catch (e: Exception) {
            Toast.makeText(requireContext(), "–ü–æ—á—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", Toast.LENGTH_LONG).show()
        }
    }

    private fun showRatingDialog() {
        val dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_rating, null)

        val dialog = AlertDialog.Builder(requireContext())
            .setView(dialogView)
            .setCancelable(true)
            .create()

        // –ù–∞—Ö–æ–¥–∏–º –∑–≤–µ–∑–¥—ã –≤ –¥–∏–∞–ª–æ–≥–µ
        val star1 = dialogView.findViewById<TextView>(R.id.star1)
        val star2 = dialogView.findViewById<TextView>(R.id.star2)
        val star3 = dialogView.findViewById<TextView>(R.id.star3)
        val star4 = dialogView.findViewById<TextView>(R.id.star4)
        val star5 = dialogView.findViewById<TextView>(R.id.star5)
        val submitButton = dialogView.findViewById<Button>(R.id.submitButton)
        val ratingText = dialogView.findViewById<TextView>(R.id.ratingText)

        val stars = listOf(star1, star2, star3, star4, star5)
        var selectedRating = 0

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∑–≤–µ–∑–¥–∞–º
        stars.forEachIndexed { index, star ->
            star.setOnClickListener {
                selectedRating = index + 1
                updateStars(stars, selectedRating)
                ratingText.text = when (selectedRating) {
                    1 -> "–ü–ª–æ—Ö–æ üòû"
                    2 -> "–ù–µ –æ—á–µ–Ω—å üòï"
                    3 -> "–ù–æ—Ä–º–∞–ª—å–Ω–æ üôÇ"
                    4 -> "–•–æ—Ä–æ—à–æ üòä"
                    5 -> "–û—Ç–ª–∏—á–Ω–æ! ü§©"
                    else -> "–û—Ü–µ–Ω–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
                }
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitButton.setOnClickListener {
            if (selectedRating > 0) {
                when (selectedRating) {
                    1, 2 -> showFeedbackDialog(selectedRating, dialog)
                    3, 4, 5 -> {
                        Toast.makeText(
                            requireContext(),
                            "–°–ø–∞—Å–∏–±–æ –∑–∞ ${selectedRating} –∑–≤–µ–∑–¥! ‚ù§Ô∏è",
                            Toast.LENGTH_LONG
                        ).show()
                        dialog.dismiss()
                    }
                }
            } else {
                Toast.makeText(requireContext(), "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É", Toast.LENGTH_SHORT).show()
            }
        }

        dialog.show()
    }

    private fun updateStars(stars: List<TextView>, selectedRating: Int) {
        stars.forEachIndexed { index, star ->
            if (index < selectedRating) {
                star.text = "‚òÖ"
                star.setTextColor(requireContext().getColor(android.R.color.holo_orange_dark))
            } else {
                star.text = "‚òÜ"
                star.setTextColor(requireContext().getColor(android.R.color.darker_gray))
            }
        }
    }

    private fun showFeedbackDialog(rating: Int, ratingDialog: AlertDialog) {
        val feedbackDialogView = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_feedback, null)

        val feedbackDialog = AlertDialog.Builder(requireContext())
            .setView(feedbackDialogView)
            .setCancelable(false)
            .create()

        // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏ –≤ –¥–∏–∞–ª–æ–≥–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        val submitFeedbackButton = feedbackDialogView.findViewById<Button>(R.id.submitFeedbackButton)
        val skipButton = feedbackDialogView.findViewById<Button>(R.id.skipButton)

        submitFeedbackButton.setOnClickListener {
            Toast.makeText(
                requireContext(),
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –ú—ã —É—á—Ç–µ–º –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è üí´",
                Toast.LENGTH_LONG
            ).show()
            ratingDialog.dismiss()
            feedbackDialog.dismiss()
        }

        skipButton.setOnClickListener {
            Toast.makeText(
                requireContext(),
                "–°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å! –ú—ã –±—É–¥–µ–º —Å—Ç–∞—Ä–∞—Ç—å—Å—è –ª—É—á—à–µ üåü",
                Toast.LENGTH_LONG
            ).show()
            ratingDialog.dismiss()
            feedbackDialog.dismiss()
        }

        feedbackDialog.show()
    }

    private fun setVersionText() {
        try {
            val version = getAppVersion()
            val versionText = requireView().findViewById<TextView>(R.id.versionText)
            versionText.text = "–í–µ—Ä—Å–∏—è $version"
        } catch (e: Exception) {
            e.printStackTrace()
        }
    }

    private fun getAppVersion(): String {
        return try {
            val pInfo = requireContext().packageManager.getPackageInfo(requireContext().packageName, 0)
            pInfo.versionName ?: "1.0.0" // –ï—Å–ª–∏ –≤–µ—Ä—Å–∏—è null, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        } catch (e: Exception) {
            "1.0.0" // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
    }

    private fun getAppName(): String {
        return try {
            val applicationInfo = requireContext().packageManager.getApplicationInfo(requireContext().packageName, 0)
            val appName = requireContext().packageManager.getApplicationLabel(applicationInfo)
            appName?.toString() ?: "–ú–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" // –ï—Å–ª–∏ null, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        } catch (e: Exception) {
            "–ú–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
    }
}